{"version":3,"file":"component---src-pages-404-js-c3f5f85260f18f12f632.js","mappings":"uPAIaA,EAAkB,WAC7B,IAAMC,IAAcC,EAAAA,IAClB,QAAsCA,EAAAA,EAAAA,MAAtC,eAGF,IAAMC,EAAc,mCAAG,uGAEbC,UAFa,sDAInBC,QAAQC,MAARD,EAAAA,IAJmB,mDAAH,0DAQdE,EAAiB,mCAAG,uGAEhBC,aAFgB,sDAItBH,QAAQC,MAARD,EAAAA,IAJsB,mDAAH,0DAQjBI,EAAgB,kBACpBC,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,SAAAA,CAAQC,QAAS,WAAQR,GAAzB,cAFJ,EAMMS,EAAmB,kBACvBF,EAAAA,cAAAA,SAAAA,CAAQC,QAAS,WAAQJ,GAAzB,gBADF,EAIA,OACEG,EAAAA,cAAAA,MAAAA,KACGG,KAAKC,aACJJ,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,MAAAA,CAAKK,UAAU,UACbL,EAAAA,cAAAA,MAAAA,CAAKK,UAAU,WAAWF,KAAKG,kBAC/BN,EAAAA,cAACE,EAAD,OAEFF,EAAAA,cAAAA,KAAAA,QAGFG,KAAKC,aAAeJ,EAAAA,cAACD,EAAD,MA1CrB,ECEDQ,EAAS,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAEhB,OACER,EAAAA,cAAAA,SAAAA,CACES,MAAO,CACLC,OAAO,SACPC,QAAQ,oCACRC,QAAQ,OACRC,WAAW,SACXC,eAAe,kBAGjBd,EAAAA,cAACe,EAAAA,KAAD,CACEC,GAAG,IACHP,MAAO,CACLQ,SAAS,iBACTC,eAAe,SAGhBV,GAEHR,EAAAA,cAACV,EAAD,MArBN,EA8BAiB,EAAOY,aAAe,CACpBX,UAAU,IAGZ,QCeA,EAzCe,SAAC,GAAkB,IAAD,EAAfY,EAAe,EAAfA,SACVC,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACE,gCACE,gBAAC,EAAD,CAAQd,WAAW,UAAAa,EAAKE,KAAKC,oBAAV,eAAwBC,QAAxB,UACnB,uBACEhB,MAAO,CACLC,OAAO,SACPgB,SAAS,sBACTf,QAAQ,uBAGV,4BAAOS,GACP,0BACEX,MAAO,CACLkB,UAAU,iBACVV,SAAS,mBAHb,MAMK,IAAIW,MAAOC,cANhB,oBAQE,qBAAGC,KAAK,4BAAR,YAKT,C,4DCtCD,SAASC,EAAT,GAAgD,IAAD,IAAhCC,EAAgC,EAAhCA,YAAaP,EAAmB,EAAnBA,MAAOL,EAAY,EAAZA,SACzBG,GAASD,EAAAA,EAAAA,gBAAe,YAAxBC,KAcFU,EAAkBD,GAAeT,EAAKC,aAAaQ,YACnDE,EAAY,UAAGX,EAAKC,oBAAR,aAAG,EAAmBC,MAExC,OACE,gCACE,6BAAQS,EAAkBT,EAAN,MAAiBS,EAAiBT,GACtD,wBAAMU,KAAK,cAAcC,QAASH,IAClC,wBAAMI,SAAS,WAAWD,QAASX,IACnC,wBAAMY,SAAS,iBAAiBD,QAASH,IACzC,wBAAMI,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAAS,UAAAb,EAAKC,oBAAL,eAAmBc,SAAnB,KACtC,wBAAMH,KAAK,gBAAgBC,QAASX,IACpC,wBAAMU,KAAK,sBAAsBC,QAASH,IACzCb,EAGN,CAEDW,EAAIZ,aAAe,CACjBa,YAAY,IAQd,K,+GC1CaO,EAAO,kBAAM,gBAAC,IAAD,CAAKd,MAAM,kBAAjB,EAEpB,UATqB,kBACnB,gBAAC,IAAD,KACE,4CACA,oFAHiB,C,mBCgBrBe,EAAOC,QAJP,SAAqBC,GACnB,YAAiBC,IAAVD,CACT,C","sources":["webpack://gatsby-starter-default/./src/components/MetamaskConnect.tsx","webpack://gatsby-starter-default/./src/components/header.tsx","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/404.js","webpack://gatsby-starter-default/./node_modules/lodash/isUndefined.js"],"sourcesContent":["import _ from 'lodash';\nimport React from 'react'\nimport { useWeb3Context } from '../context/Web3';\n\nexport const MetamaskConnect = () => {\n  if (! _.isUndefined(useWeb3Context)) {\n    const [web3, , connect, disconnect] = useWeb3Context();\n  }\n\n  const _connectWallet = async () => {\n    try {\n      await connect();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  const _disconnectWallet = async () => {\n    try {\n      await disconnect();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  const ConnectButton = () => (\n    <div>\n      <button onClick={() => { _connectWallet() }}>Connect</button>\n    </div>\n  );\n\n  const DisconnectButton = () => (\n    <button onClick={() => { _disconnectWallet() }}>Disconnect</button>\n  )\n\n  return (\n    <div>\n      {web3.isConnected && (\n        <div>\n          <div className=\"inline\">\n            <div className=\"account\">{web3.connectedAccount}</div>\n            <DisconnectButton/>\n          </div>\n          <br />\n        </div>\n      )}\n      {!web3.isConnected && <ConnectButton />}\n    </div>\n  )\n}","import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nimport { MetamaskConnect } from \"./MetamaskConnect\"\n\nconst Header = ({ siteTitle }) => {\n\n  return (\n    <header\n      style={{\n        margin: `0 auto`,\n        padding: `var(--space-4) var(--size-gutter)`,\n        display: `flex`,\n        alignItems: `center`,\n        justifyContent: `space-between`,\n      }}\n    >\n      <Link\n        to=\"/\"\n        style={{\n          fontSize: `var(--font-sm)`,\n          textDecoration: `none`,\n        }}\n      >\n        {siteTitle}\n      </Link>\n      <MetamaskConnect />\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n          }}\n        >\n          Â© {new Date().getFullYear()} &middot; Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import * as React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <h1>404: Not Found</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n","/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n *\n * _.isUndefined(null);\n * // => false\n */\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\nmodule.exports = isUndefined;\n"],"names":["MetamaskConnect","_isUndefined","useWeb3Context","_connectWallet","connect","console","error","_disconnectWallet","disconnect","ConnectButton","React","onClick","DisconnectButton","web3","isConnected","className","connectedAccount","Header","siteTitle","style","margin","padding","display","alignItems","justifyContent","Link","to","fontSize","textDecoration","defaultProps","children","data","useStaticQuery","site","siteMetadata","title","maxWidth","marginTop","Date","getFullYear","href","Seo","description","metaDescription","defaultTitle","name","content","property","author","Head","module","exports","value","undefined"],"sourceRoot":""}